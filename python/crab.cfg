[CRAB]
#
#   This section contains the default values for general parameters.
#   They can be set also as a command-line option, i.e.
#
#   key1 = value1
#   key2 = value2
#
#   in this section corresponds to
#
#   crab.py -key1=value1 -key2=value2
#
#   in the command line.
#
jobtype = orca
scheduler = edg
use_boss = 1


[USER]

###############################
####### DATA TO ANALYZE #######
###############################

## CERN
#dataset = bt03_qcd50-80_2tauj
#owner = bt_2x1033PU761_TkMu_g133_CMS

## CNAF
dataset = bt03_ttH120_6j1l
owner = bt_DST871_2x1033PU_g133_CMS

## PIC
#dataset = hg03b_hww_2l_140
#owner = hg_DST871_2x1033PU_g133_CMS

## FNAL
# dataset = eg03_tt_2e2mu 
# owner = eg_DST871_2x1033PU_g133_CMS

## LNL
#dataset = mu03_W1mu 
#owner = mu_DST861_2_3_2x1033PU_g132_CMS

## BA
#dataset = bt03_tt_pureleptonic_etau
#owner = bt_DST871_2x1033PU_g133_CMS


### Data Tier to be accessed.
### Possible candidates are: DST, Digi, Hit (Comma separated list, mind the case!)
#data_tier = DST,Digi,Hit
data_tier = DST

### Order of the catalogs on .orcarc : do not change unless you know what you are doing!
#order_catalogs = 

###############################
####### ORCA EXECUTABLE #######
###############################

## User must provide the executable into his personal scram area
executable = ExDSTStatistics

## or the script that calls the executable...
#script_exe = /home/fanzago/CRAB/UserTools/src/orca_script.sh

## Output files produced by executable: comma separated list, can be empty but mut be present!
output_file = dststatistics.aida

## additional files to be put in InputSandBox: comma separated list
#additional_input_files =

###############################
########## ORCA CARD ##########
###############################

## orcarc card provided by user (if not in current directory, the full path
## must to be provided) NB the file must exist (could be empty)
orcarc_file = orcarc.main

## First event to analyze: default is 0
#first_event = 0

## Total number of events to analyze: -1==all
total_number_of_events = 100

## Number of events for each job
job_number_of_events = 10

### Total number of jobs to be created: incompatible with previous "job_number_of_events"
#total_number_of_jobs = 100


#################################
######### CRAB  DIR  ############
#################################

## Name of UI directory where CRAB will create job to submit (with full path).
## If commented, the default directory will be "crab_0_data_time"
#ui_working_dir = /full_path/mu03_DY2mu
#ui_working_dir : /full_path/%(dataset)s


#################################
#### JOB OUTPUT MANAGEMENT #####
#################################

### RETRIEVE ORCA OUTPUT INTO UI ###
## to have back the orca executable output into UI (return_data= 1)
return_data = 1

### If return_data = 1 ###
## UI directory where to store the orca executable output
## FULL path is mandatory. If none <ui_working_dir>/res will be used.
#outputdir=/home/fanzago/CRAB/Crab/python/out_orca

### If return_data = 1 ###
## UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs
## FULL path is mandatory. If none <ui_working_dir>/res will be used.
#logdir=/home/fanzago/CRAB/UserTools/src/grid_job_log

### COPY ORCA OUTPUT INTO A SE ###
## if you want to copy the orca executable output into a SE (i:e castor)
### WARNING: if the copy fails and return_data = 0, the output is lost
#copy_data = 1

### if copy_data = 1 ###
## name of the SE where to copy the orca executable output.
#storage_element = castorgrid.cern.ch
## and the SE directory (or the mountpoint) that has to be writable from all
#storage_path = /castor/cern.ch/user/u/user

### REGISTER ORCA OUTPUT IN THE RLS CATALOG ###
## if you want also to register the orca executable output into the RLS catalog
## WARNING: to use with copy_data = 1
#register_data = 1

### if register_data = 1
## If you register the orca output file into the RLS catalog, this is the first part of LFN
### example LFN="lfn_dir"/"output_file"
#lfn_dir = MyDirLFN 

#################################
####### JOB MONITORING  ### #####
#################################

### MonALisa Monitoring
activate_MonALisa = 0

### Use central BOSS DB instead of one for each task: the DB must be already been setup!
use_central_bossDB = 0

### Use Boss RealTime monitoring
use_boss_rt = 1 

[EDG]

#
#   This section contains EDG specific stuff.
#

# LCG middleware version installed on testbed
lcg_version = 2

## to change the cms-broker RB (download these files from crab web page)
#config_vo = /home/fanzago/edg_wl_ui.conf.CMS_CERN
#config = /home/fanzago/edg_wl_ui_cmd_var.conf.CMS_CERN

## to add other requirements to jdl file, as example the Operating System
#requirements = (other.GlueHostOperatingSystemName == "RedHat")

## cpu time and wall_clock_time(=real time) in minutes. Written into the jdl file
#max_cpu_time = 60
#max_wall_clock_time = 60

## CE Black List: all the CE whose name contains the following strings (comma
## separated list) will not be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#CE_black_list = cern

## CE White List: only the CE whose name contains the following strings (comma
## separated list) will be considered for submission.
## Use the dns domain (eg fnal, cern, ifae, fzk, cnaf, lnl,....)
#CE_white_list = bo

## fields written into jdl
virtual_organization = cms

## number or retry count
retry_count = 0

lcg_catalog_type = lfc
lfc_host = lfc-cms-test.cern.ch
lfc_home = /grid/cms
