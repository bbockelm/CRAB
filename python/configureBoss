#! /bin/sh
#
# Stefano Lacaprara  <lacaprara@pd.infn.it>  INFN Padova
#
# Installation script for Crab
#
# 02-Nov-2005

### BOSS configuration parameters
BOSSVER=4_0_0
BACKEND=SQLite
BOSSDBPATH=${HOME}/boss/
BOSSDBNAME=bossCrab

#############################################
######## BOSS CONFIGURATION #################
#############################################


if [ ! -d ${HOME}/.bossrc ];  then
    mkdir  ${HOME}/.bossrc
fi

echo "Creating ${HOME}/.bossrc/BossConfig.clad"
cat > ${HOME}/.bossrc/BossConfig.clad <<EOF
# This is the BOSS configuration file

[
# BOSS temporary directory (where files are extracted from DB)
BOSS_TMP_DIR = "/tmp";

# BOSS update interval
BOSS_MIN_UPD_INT = 30;  # at most one upd. every BOSS_MIN_UPD_INT sec.
BOSS_MAX_UPD_INT = 180; # at least one upd. every BOSS_MAX_UPD_INT sec.

# Maximum retries after post-process finishes before killing RTUpdator
# (waits BOSS_UPD_INTERVAL*BOSS_MAX_RETRY seconds)
BOSS_MAX_RETRY = 3;

# Boss Database Backend
DB_BACKEND = "${BACKEND}";

# Info sent also to Monalisa (if empty not enabled)
ML_URL = "";
]
EOF

######## Configuring backend ###########
# SQLlite
if [ "${BACKEND}" == "SQLite" ]; then

  if [ ! -d ${BOSSDBPATH} ];  then
    echo "creating ${BOSSDBPATH} directory"
    mkdir ${BOSSDBPATH}
  else
    echo "Directory ${BOSSDBPATH} Already exist. Stopping"
    exit 1
  fi
echo "Creating ${HOME}/.bossrc/SQLiteConfig.clad"
cat > ${HOME}/.bossrc/SQLiteConfig.clad <<EOF
# This is the BOSS SQLite database configuration file
[
# BOSS SQLite database PATH
SQLITE_DB_PATH = "${BOSSDBPATH}";

# BOSS SQLite database
DB_NAME = "${BOSSDBNAME}";
]
EOF

fi # Backend SQLite

### Backend MySQL
if [ "${BACKEND}" == "MySQL" ]; then
HOST=`/bin/hostname`
DOMAIN=`/bin/hostname -d`

CONFSCRIPT=${HOME}/.bossrc/MySQLConfig.clad
/bin/rm -f $CONFSCRIPT
cat > $CONFSCRIPT  <<EOF

# This is the BOSS MySQL Database configuration file

[
# BOSS MySQL database file
DB_NAME = "${BOSSDBNAME}";
# Host where the MySQL server is running
DB_HOST = "${HOST}";
DB_DOMAIN = "${DOMAIN}";
# Default BOSS MySQL user and password
DB_USER = "BOSSmanager";
DB_USER_PW = "BossMySQL";
# Guest BOSS MySQL user and password
DB_GUEST = "BOSSmonitor";
DB_GUEST_PW = "BossMySQL";
# MySQL table type
TABLE_TYPE = "";
# MySQL port
DB_PORT = 0;
# MySQL socket
DB_SOCKET = "";
# MySQL client flag
DB_CLIENT_FLAG = 0;
]
EOF

  echo ""
  # Check MySQL server
  if [ `ps -d | grep mysqld | wc -l` != "0" ]; then
    echo "Found a MySQL server on this host"
  else
    echo "MySQL server is not running on this host"
  fi
fi # backend MySQL

###################################
###### Configuring Boss DB ########
###################################
echo "Configuring DB"
bossAdmin configureDB

#######################################
###### Configuring RealTime monitor ###
#######################################
echo "Creating ${HOME}/.bossrc/MySQLRTConfig.clad"
cat > ${HOME}/.bossrc/MySQLRTConfig.clad <<EOF
# This is the BOSS MySQL Database configuration file

[
# BOSS MySQL database file
DB_NAME = "boss_rt_v3_6";

# Host where the MySQL server is running
DB_HOST = "boss.bo.infn.it";
DB_DOMAIN = "bo.infn.it";

# Default BOSS MySQL user and password
DB_USER = "BOSSv3_6manager";
DB_USER_PW = "BossMySQL";

# Guest BOSS MySQL user and password
DB_GUEST = "BOSSv3_6monitor";
DB_GUEST_PW = "BossMySQL";

# MySQL table type
TABLE_TYPE = "";

# MySQL port
DB_PORT = 0;

# MySQL socket
DB_SOCKET = "";

# MySQL client flag
DB_CLIENT_FLAG = 0;
]
EOF

### Registering RT monitor
cd $BOSS_ROOT/BossRTMon/bin
echo "Registering MySQL RTMon Service"
./registerMySQLRTmon 

######################################
#### Real Scheduler configuration ####
######################################

### Registering Schedulers
cd $BOSS_ROOT/BossSched/bin/
echo "Registering fork scheduler (default)"
./registerForkScheduler
echo "Registering edg scheduler"
./registerEDGScheduler
# Glite
#    ./registerGLITEScheduler
# LSF
#    ./registerLSFScheduler
# PBS
#    ./registerPBSScheduler
# Condor
#    ./registerCONDORScheduler
# BBS
#    ./registerBBSScheduler

cd $BOSS_ROOT/..

echo "Done!"

# echo "Remember to source $BOSS_ROOT/bossenv.(c)sh"
# echo "at the beginning of every session"
