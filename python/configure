#! /bin/sh
#
# Stefano Lacaprara  <lacaprara@pd.infn.it>  INFN Padova
#
# Installation script for Crab
#
# 09-March-2006

# Subdir structure:
# top/
#     Boss/...
#     python/...
#     script/...
#     DBSAPI
#     DLSAPI
#     PsetCode
#
TopDir=`\pwd`

#############################################
######## BOSS CONFIGURATION #################
#############################################
BOSSVER=3_6_4
BACKEND=SQLite

function configureBoss {
## unpack and configure Boss
cd Boss
echo "unpacking BOSS distribution ${BOSSVER}"
tar xzf boss-v${BOSSVER}-bin.tar.gz
cd boss-v${BOSSVER}

echo "Creating Env. files"
./CONFIGURE
echo "Creating ./BossConfig.clad"
cat > ./BossConfig.clad <<EOF
# This is the BOSS configuration file

[
# BOSS temporary directory (where files are extracted from DB)
BOSS_TMP_DIR = "/tmp";

# BOSS update interval
BOSS_MIN_UPD_INT = 30;  # at most one upd. every BOSS_MIN_UPD_INT sec.
BOSS_MAX_UPD_INT = 180; # at least one upd. every BOSS_MAX_UPD_INT sec.

# Maximum retries after post-process finishes before killing RTUpdator
# (waits BOSS_UPD_INTERVAL*BOSS_MAX_RETRY seconds)
BOSS_MAX_RETRY = 3;

# Boss Database Backend
DB_BACKEND = "${BACKEND}";

# Info sent also to Monalisa (if empty not enabled)
ML_URL = "";
]
EOF

echo "Setting environment"
. bossenv.sh
}

function configureCrab {
## prapare the crab env
cd $TopDir

# sh style
cat > crab.sh <<EOF
#! /bin/sh
# CRAB related Stuff
export CRABDIR=$TopDir
export CRABSCRIPT=\${CRABDIR}

CRABPATH=\${CRABDIR}/python
CRABDLSAPIPATH=$TopDir/DLSAPI
export CRABPYTHON=\${CRABDIR}/python
export CRABDBSAPIPYTHON=$TopDir/DBSAPI
export CRABDLSAPIPYTHON=$TopDir/DLSAPI
export CRABPSETPYTHON=$TopDir/PsetCode

if [ -z "\$PATH" ]; then
export PATH=\${CRABPATH}:\${CRABDLSAPIPATH}
else
export PATH=\${CRABPATH}:\${PATH}:\${CRABDLSAPIPATH}
fi
if [ -z "\$PYTHONPATH" ]; then
export PYTHONPATH=\${CRABPYTHON}:\${CRABDBSAPIPYTHON}:\${CRABDLSAPIPYTHON}:\${CRABPSETPYTHON}
else
export PYTHONPATH=\${CRABPYTHON}:\${PYTHONPATH}:\${CRABDBSAPIPYTHON}:\${CRABDLSAPIPYTHON}:\${CRABPSETPYTHON}
fi

# BOSS related Stuff
source $BOSSDIR/bossenv.sh

# check whether central boss db is configured

# check if .bossrc dir exists

if [ ! -d ~/.bossrc ]; then
  mkdir ~/.bossrc
fi

# check if *clad files exist

if [ ! -e ~/.bossrc/BossConfig.clad ]; then
  if [ -e ~/BossConfig.clad ]; then
    cp  ~/BossConfig.clad ~/.bossrc/BossConfig.clad
  else
    echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    return 1
  fi
fi
if [ ! -e ~/.bossrc/SQLiteConfig.clad ]; then
  if [ -e ~/SQLiteConfig.clad ]; then
    cp ~/SQLiteConfig.clad ~/.bossrc/SQLiteConfig.clad
  else
    echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    return 1
  fi
fi
if [ ! -e ~/.bossrc/MySQLRTConfig.clad ]; then
  if [ -e ~/MySQLRTConfig.clad ]; then
    cp  ~/MySQLRTConfig.clad  ~/.bossrc/MySQLRTConfig.clad
  else
    echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    return 1
  fi
fi
# now check a boss command to see if boss DB is up and running
if [ \`boss clientID 1>/dev/null | grep -c "not correctly configured"\` -ne 0 ]; then
  echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    return 1
fi
EOF

# csh style
cat > crab.csh <<EOF
#! /bin/csh
# CRAB related Stuff
setenv CRABDIR $TopDir
setenv CRABSCRIPT \${CRABDIR}

set CRABPATH=\${CRABDIR}/python
set CRABDLSAPIPATH=$TopDir/DLSAPI
setenv CRABPYTHON \${CRABDIR}/python
setenv CRABDBSAPIPYTHON $TopDir/DBSAPI
setenv CRABDLSAPIPYTHON $TopDir/DLSAPI
setenv CRABPSETPYTHON $TopDir/PsetCode

if ( ! \$?path ) then
set path=(\${CRABPATH} \${CRABDLSAPIPATH})
else
set path=( \${CRABPATH} \${path} \${CRABDLSAPIPATH})
endif
if ( ! \$?PYTHONPATH ) then
setenv PYTHONPATH \${CRABPYTHON}:\${CRABDBSAPIPYTHON}:\${CRABDLSAPIPYTHON}:\${CRABPSETPYTHON}
else
setenv PYTHONPATH \${CRABPYTHON}:\${PYTHONPATH}:\${CRABDBSAPIPYTHON}:\${CRABDLSAPIPYTHON}:\${CRABPSETPYTHON}
endif

# BOSS related Stuff
source $BOSSDIR/bossenv.csh

# check whether central boss db is configured

# check if .bossrc dir exists

if ( ! -d ~/.bossrc ) then
  mkdir ~/.bossrc
endif

# check if *clad files exist
if ( ! -e ~/.bossrc/BossConfig.clad ) then
  if ( -e ~/BossConfig.clad ) then
    cp ~/BossConfig.clad ~/.bossrc/BossConfig.clad
  else
    echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    exit 1
  endif
endif
if ( ! -e ~/.bossrc/SQLiteConfig.clad ) then
  if ( -e ~/SQLiteConfig.clad ) then
    cp ~/SQLiteConfig.clad ~/.bossrc/SQLiteConfig.clad
  else
    echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    exit 1
  endif
endif
if ( ! -e ~/.bossrc/MySQLRTConfig.clad ) then
  if ( -e ~/MySQLRTConfig.clad ) then
    cp ~/MySQLRTConfig.clad  ~/.bossrc/MySQLRTConfig.clad
  else
    echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
    exit 1
  endif
endif
# now check a boss command to see if boss DB is up and running
if ( \`boss clientID |& grep -c "not correctly configured"\` ) then
  echo "User-boss DB not installed: run \$CRABDIR/configureBoss"
  exit 1
endif
EOF
return
}

function configureDLSAPI {
# part for PyXML install
echo "DLSAPI Installation: begin at `date`"
cd $TopDir/DLSAPI
./InstallPyXML.sh
cd ..
echo "DLSAPI Installation: end at `date`"
return
}

configureBoss
configureCrab
configureDLSAPI

