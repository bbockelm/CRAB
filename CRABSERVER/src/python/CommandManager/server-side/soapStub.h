/* soapStub.h
   Generated by gSOAP 2.7.9l from CRAB-Proxy.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__transferTaskType
#define SOAP_TYPE_ns1__transferTaskType (7)
/* ns1:transferTaskType */
struct ns1__transferTaskType
{
	char *taskDescriptor;	/* optional attribute of type xsd:string */
	char *cmdDescriptor;	/* optional attribute of type xsd:string */
	char *uuid;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__sendCommandType
#define SOAP_TYPE_ns1__sendCommandType (8)
/* ns1:sendCommandType */
struct ns1__sendCommandType
{
	char *cmdDescriptor;	/* optional attribute of type xsd:string */
	char *uuid;	/* optional attribute of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (9)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
	char *_ns1__fault;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__transferTaskAndSubmitResponse
#define SOAP_TYPE_ns1__transferTaskAndSubmitResponse (12)
/* ns1:transferTaskAndSubmitResponse */
struct ns1__transferTaskAndSubmitResponse
{
	char *transferTaskAndSubmitResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE_ns1__transferTaskAndSubmit
#define SOAP_TYPE_ns1__transferTaskAndSubmit (16)
/* ns1:transferTaskAndSubmit */
struct ns1__transferTaskAndSubmit
{
	struct ns1__transferTaskType *transferTaskAndSubmitRequest;	/* optional element of type ns1:transferTaskType */
};
#endif

#ifndef SOAP_TYPE_ns1__sendCommandResponse
#define SOAP_TYPE_ns1__sendCommandResponse (17)
/* ns1:sendCommandResponse */
struct ns1__sendCommandResponse
{
	char *sendCommandResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE_ns1__sendCommand
#define SOAP_TYPE_ns1__sendCommand (21)
/* ns1:sendCommand */
struct ns1__sendCommand
{
	struct ns1__sendCommandType *sendCommandRequest;	/* optional element of type ns1:sendCommandType */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskStatusResponse
#define SOAP_TYPE_ns1__getTaskStatusResponse (22)
/* ns1:getTaskStatusResponse */
struct ns1__getTaskStatusResponse
{
	char *getTaskStatusResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskStatus
#define SOAP_TYPE_ns1__getTaskStatus (25)
/* ns1:getTaskStatus */
struct ns1__getTaskStatus
{
	char *getTaskStatusRequest;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (26)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (27)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (29)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (30)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (6)
typedef char *xsd__integer;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 ns1__transferTaskAndSubmit(struct soap*, struct ns1__transferTaskType *transferTaskAndSubmitRequest, struct ns1__transferTaskAndSubmitResponse *_param_1);

SOAP_FMAC5 int SOAP_FMAC6 ns1__sendCommand(struct soap*, struct ns1__sendCommandType *sendCommandRequest, struct ns1__sendCommandResponse *_param_2);

SOAP_FMAC5 int SOAP_FMAC6 ns1__getTaskStatus(struct soap*, char *getTaskStatusRequest, struct ns1__getTaskStatusResponse *_param_3);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__transferTaskAndSubmit(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__sendCommand(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__getTaskStatus(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
