/* soapStub.h
   Generated by gSOAP 2.7.9l from CRAB-Proxy.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/




#ifndef SOAP_TYPE_ns1__transferTaskType
#define SOAP_TYPE_ns1__transferTaskType (7)
/* ns1:transferTaskType */
class SOAP_CMAC ns1__transferTaskType
{
public:
	char *taskDescriptor;	/* optional attribute */
	char *cmdDescriptor;	/* optional attribute */
	char *uuid;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_ns1__transferTaskType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__transferTaskType() : taskDescriptor(NULL), cmdDescriptor(NULL), uuid(NULL), soap(NULL) { }
	virtual ~ns1__transferTaskType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__sendCommandType
#define SOAP_TYPE_ns1__sendCommandType (8)
/* ns1:sendCommandType */
class SOAP_CMAC ns1__sendCommandType
{
public:
	char *cmdDescriptor;	/* optional attribute */
	char *uuid;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_ns1__sendCommandType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__sendCommandType() : cmdDescriptor(NULL), uuid(NULL), soap(NULL) { }
	virtual ~ns1__sendCommandType() { }
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (11)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
	char *_ns1__fault;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__transferTaskAndSubmitResponse
#define SOAP_TYPE_ns1__transferTaskAndSubmitResponse (14)
/* ns1:transferTaskAndSubmitResponse */
struct ns1__transferTaskAndSubmitResponse
{
public:
	char* transferTaskAndSubmitResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE_ns1__transferTaskAndSubmit
#define SOAP_TYPE_ns1__transferTaskAndSubmit (18)
/* ns1:transferTaskAndSubmit */
struct ns1__transferTaskAndSubmit
{
public:
	ns1__transferTaskType *transferTaskAndSubmitRequest;	/* optional element of type ns1:transferTaskType */
};
#endif

#ifndef SOAP_TYPE_ns1__sendCommandResponse
#define SOAP_TYPE_ns1__sendCommandResponse (19)
/* ns1:sendCommandResponse */
struct ns1__sendCommandResponse
{
public:
	char* sendCommandResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:integer */
};
#endif

#ifndef SOAP_TYPE_ns1__sendCommand
#define SOAP_TYPE_ns1__sendCommand (23)
/* ns1:sendCommand */
struct ns1__sendCommand
{
public:
	ns1__sendCommandType *sendCommandRequest;	/* optional element of type ns1:sendCommandType */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskStatusResponse
#define SOAP_TYPE_ns1__getTaskStatusResponse (24)
/* ns1:getTaskStatusResponse */
struct ns1__getTaskStatusResponse
{
public:
	char *getTaskStatusResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__getTaskStatus
#define SOAP_TYPE_ns1__getTaskStatus (27)
/* ns1:getTaskStatus */
struct ns1__getTaskStatus
{
public:
	char *getTaskStatusRequest;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (28)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (29)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (31)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (32)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (6)
typedef char *xsd__integer;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
