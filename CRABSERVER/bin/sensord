#!/bin/bash

mkdir -p ${PRODAGENT_WORKDIR}/HTTPFrontend/sensors

CSC=$1;
pid=0;
printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` " * * * start sensord for component ${CSC}" >> ${PRODAGENT_WORKDIR}/HTTPFrontend/sensors/${CSC}-pidstat.log ;
until false; do
    until false; do
        if echo mySQL GridFTP | grep -qw $CSC; then
            target="service";
            currentpid=`crabServer-svcPid --${target} ${CSC}`;
        else
            target="component";
            currentpid=`crabServer-cmpPid --${target} ${CSC}`;
        fi
        if ! echo $currentpid | grep -v [a-zA-Z] | grep -qe [0-9]; then
            printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "${target} ${CSC} not running, will retry in a minute...";
            if [ $pid -gt 0 ]; then
                printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "now killing old sar monitoring for old pid ${pid}";
                ps -C sar wwho pid,cmd | grep -i "sar -X $pid " | awk '{print $1}' | xargs kill -9
                ps -C sadc wwho pid,cmd | grep -i " -X $pid" | awk '{print $1}' | xargs kill -9
            fi
            pid=0
            break;
        fi
        if ! [ $currentpid -eq $pid ]; then
            if [ $pid -gt 0 ]; then
                printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "${target} ${CSC} was restarted:";
                printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "now killing old sar monitoring for old pid ${pid}";
                ps -C sar wwho pid,cmd | grep -i "sar -X $pid " | awk '{print $1}' | xargs kill -9
                ps -C sadc wwho pid,cmd | grep -i " -X $pid" | awk '{print $1}' | xargs kill -9
                printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "new pid to be monitored: ${currentpid}";
            else
                printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "searching for already running sar sensor for ${target} ${CSC}...";
                printf "%s   %s: " `date +%m/%d/%y#%H:%M:%S\ %s`;
                ps -C nocommand o pid,cmd 
                printf "%s   %s: " `date +%m/%d/%y#%H:%M:%S\ %s`;
                if ps -C sar wwho pid,cmd | grep -i "sar -X $currentpid " ; then
                    printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "sar sensor fo ${target} ${CSC} already running (see above)! restarting";
                    printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "now killing old sar monitoring for old pid ${currentpid}";
                    ps -C sar wwho pid,cmd | grep -i "sar -X $currentpid " | awk '{print $1}' | xargs kill -9
                    ps -C sadc wwho pid,cmd | grep -i " -X $currentpid" | awk '{print $1}' | xargs kill -9
                else
                    echo "not found"
                fi
            fi
            pid=$currentpid;
            break;
        fi
        sleep 60;
    done


    if [ $pid -gt 0 ]; then
        if SAR=`which sar 2>/dev/null`; then
            printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "starting ${SAR} sensor for ${target} ${CSC}=${pid}, see: ";
	    if echo ${CSC} | grep -Eqwo mySQL\|TaskTracking\|HTTPFrontend\|TaskLifeManager\|ErrorHandler\|CommandManager\|AdminControl\|Notification; then
		${SAR} -x $pid 60 0 | grep --line-buffered $pid | awk '{ print strftime("%m/%d/%y#%H:%M:%S   %s") "      " $6 "   " $7 "   " ($6+$7); fflush()}'  1>> ${PRODAGENT_WORKDIR}/HTTPFrontend/sensors/${CSC}-pidstat.dat 2>/dev/null & 
	    else
		${SAR} -X $pid 60 0 | grep --line-buffered $pid | awk '{ print strftime("%m/%d/%y#%H:%M:%S   %s") "      " $6 "   " $7 "   " ($6+$7); fflush()}'  1>> ${PRODAGENT_WORKDIR}/HTTPFrontend/sensors/${CSC}-pidstat.dat 2>/dev/null & 
	    fi
            sleep 1
            printf "%s   %s: " `date +%m/%d/%y#%H:%M:%S\ %s`;
            ps -C nocommand o pid,cmd
            printf "%s   %s: " `date +%m/%d/%y#%H:%M:%S\ %s`;
            ps -C sar wwho pid,cmd | grep -i "X $pid "
        else
            echo "SysStat package (sar) not installed: aborting" >&2;
            printf "%s   %s: %s\n" `date +%m/%d/%y#%H:%M:%S\ %s` "SysStat package (sar) not installed: aborting" 
            exit 1;
        fi
    fi
done >> ${PRODAGENT_WORKDIR}/HTTPFrontend/sensors/${CSC}-pidstat.log

